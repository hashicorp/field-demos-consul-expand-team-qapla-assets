global:
  enabled: true
  datacenter: ${datacenter}
  name: consul
  image: ${image}
  # image: 'hashicorp/consul-enterprise:$${version}-ent'
  # imageEnvoy: $${envoy}
  tls:
    enabled: true
    caCert:
      secretName: consul-federation
      secretKey: caCert
    caKey:
      secretName: consul-federation
      secretKey: caKey
  federation:
    enabled: true
%{if enterprise ~} 
  enableConsulNamespaces: true
%{endif ~}
server:
  enabled: true
  # Create a K8s secret with:
  # `kubectl create secret generic consul-ent-license --from-literal="key=$(cat <your_path>/consul.hclic)" -n consul-cluster`
%{if enterprise && license != null ~}  
  enterpriseLicense:
    secretName: consul-ent-license
    secretKey: key
%{endif ~}
  replicas: ${nodes}
  bootstrapExpect: ${nodes}
  disruptionBudget:
    enabled: true
    maxUnavailable: 0
  # affinity:
  extraVolumes:
    - type: secret
      name: consul-federation
      items:
        - key: serverConfigJSON
          path: config.json
      load: true
ui:
  enabled: true
  service:
    enabled: true
    type: LoadBalancer
    # additionalSpec: |
    #   ports:
    #   - name: http
    #     port: 80
    #     targetPort: 8500
    #     nodePort: 30084
    #   - name: https
    #     port: 443
    #     targetPort: 8501
    #     nodePort: 30085

meshGateway:
  enabled: true
  enableHealthChecks: false
  replicas: 1
  service:
    enabled: true
    # type: 'NodePort'
    # nodePort: 30001

connectInject:
  enabled: true
    transparentProxy:
      defaultEnabled: true
%{if enterprise ~}
  consulNamespaces:
    mirroringK8S: true
%{endif ~}  
client:
  enabled: true
  grpc: true
controller:
  enabled: true

ingressGateways:
  enabled: true
  defaults:
    replicas: 1
    service:
      type: LoadBalancer
      ports:
        - port: 443
          nodePort: null
        - port: 8080
          nodePort: null
    #Â affinity: ""
  gateways:
    - name: ingress-gateway